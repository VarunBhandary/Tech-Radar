name,ring,quadrant,isNew,description
"C#",adopt,"Languages and Frameworks",true,"<a href='https://docs.microsoft.com/en-us/dotnet/csharp/'>C#</a> is our language of choice. It's strongly-typed, blends functional and object-oriented programming and works on all the OS we need to support."
"TypeScript",adopt,"Languages and Frameworks",true,"<a href='https://www.typescriptlang.org/'>TypeScript</a> is our default choice for running code in the browser. It's strongly-typed and smoothes out the rough bits of JavaScript."
".NET 5",adopt,"Languages and Frameworks",true,"<a href='https://dotnet.microsoft.com/'>.NET 5</a> is now cross-platform and a great choice for desktop, web and cloud-based applications."
"ASP.NET Core",adopt,"Languages and Frameworks",true,"<a href='https://dotnet.microsoft.com/apps/aspnet'>ASP.NET</a>."
"React",adopt,"Languages and Frameworks",true,"<a href='https://reactjs.org/'>React</a> makes it painless to create interactive UIs."
"Bash",adopt,"Languages and Frameworks",true,"<a href='https://www.gnu.org/software/bash/'>Bash</a> is our default choice for scripting internal tools. Everyone should be familiar with the Bash toolkit."
"Go",trial,"Languages and Frameworks",true,"<a href='https://golang.org/'>Go</a> is the natural language to use when extending Kubernetes with operators."
"Java",trial,"Languages and Frameworks",true,"Redgate purchased Flyway, written in <a href='https://www.oracle.com/java/'>Java</a>. Java is a plausible choice for new products (due to its rich ecosystem), but we default to C#."
"Blazor.Net",assess,"Languages and Frameworks",true,"<a href='https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor'>Blazor</a> is super exciting. It means we might get to leverage our existing C# skills in the browser. It's too early for Redgate to commit to using this in production, so it's in assess so we can keep a good understanding of developments in this area."
".NET Core",hold,"Languages and Frameworks",true,"Don't use .NET Core - we've moved on to .NET 5."
"PowerShell",hold,"Languages and Frameworks",true,"Don't use PowerShell for new projects - prefer Bash."
"WinForms",hold,"Languages and Frameworks",true,"Don't use WinForms for new projects - prefer Electron."
"WPF",hold,"Languages and Frameworks",true,"Don't use WPF for new projects - prefer Electron."
"Visual Studio",adopt,"Tools",true,"Visual Studio is our default IDE for developing in C#. We get the Enterprise edition via our MSDN subscription."
"Rider",adopt,"Tools",true,"Many teams use Rider instead of Visual Studio for their development. We have licences for it."
"VS Code",adopt,"Tools",true,""
"TeamCity",adopt,"Tools",true,"TeamCity is our default build system."
"GitHub",adopt,"Tools",true,"All development should use GitHub."
"Application Insights",adopt,"Tools",true,"All applications should use Application Insights as the default developer telemetry platform."
"Flyway",adopt,"Tools",true,""
"WSL 2",adopt,"Tools",true,"Windows Subsystem for Linux should be installed on every development machine"
"CLIs",adopt,"Tools",true,""
"RESTful APIs",adopt,"Tools",true,""
"SignalR",adopt,"Tools",true,"<a href='https://docs.microsoft.com/en-us/aspnet/core/signalr/introduction?view=aspnetcore-5.0'>SignalR</a> is our default choice for push-functionality."
"Hashicorp Vault",adopt,"Tools",true,"We recommend <a href='https://www.vaultproject.io/'>Hashicorp Vault</a> for storing secrets."
"Terraform",adopt,"Tools",true,""
"Docker",adopt,"Tools",true,""
"gRPC",trial,"Tools",true,"<a href='https://grpc.io/'>gRPC</a> is a high-performance RPC framework which we may investigate for high-volume data collection (for example, SQL Monitor)."
"Azure DevOps",trial,"Tools",true,"We believe Azure DevOps might be a fine alternative to TeamCity."
"WhiteSource (vulnerability scanning)",trial,"Tools",true,"We currently use WhiteSource for vulnerability scanning. This is currently under review."
"DocFx",trial,"Tools",true,"<a href='https://dotnet.github.io/docfx/'>DocFX</a> is an extensible and scalable static documentation generator. We're experimenting with it for the <a href='https://progression-framework.red-gate.com'>web version of the progression framework</a>. Could this be a future solution to host our documentation too?"
"GitHub Actions",assess,"Tools",true,"We're keeping an eye on GitHub actions as part of simplifying our build process."
"Makefiles",assess,"Tools",true,"Should we fall back to using Makefiles as part of a simpler build process? Again, this is part of our desire to simplify our build process."
"Earthly",assess,"Tools",true,"TODO Peter"
"Feature Flagging vendors (Launch Darkly?)",assess,"Tools",true,"If your usage of feature flagging becomes sufficiently complicated then it's time to investigate third-party vendors."
"Cake",assess,"Tools",true,"TODO Andrea"
"Bazel",assess,"Tools",true,"TODO Chris H"
"Raygun",hold,"Tools",true,"Deprecated in favour of Application Insights"
"Virtualbox based Vagrant boxes",hold,"Tools",true,""
"Keepass files in GitHub",hold,"Tools",true,"Use a password manager instead."
"Redgate.Build",hold,"Tools",true,"Redgate.Build is our own PowerShell based build scripts. Over time it's become complicated and we wouldn't recommend it for new projects."
"Kubernetes",adopt,"Platforms",true,"<a href='https://kubernetes.io/'>K8S</a> is the undeniable winner of orchestration tools."
"Docker",adopt,"Platforms",true,""
"Electron",adopt,"Platforms",true,"Electron has proved itself for developing web-based desktop products. It's our default choice for new desktop-based applications."
"Backing store in SQL Server",adopt,"Platforms",true,""
"Redgate Platfrom",adopt,"Platforms",true,"All new applications should be built on the Redgate Platform."
"Linux x64 (.NET supported versions)",adopt,"Platforms",true,""
"Windows",adopt,"Platforms",true,""
"macOS",adopt,"Platforms",true,""
"PostgreSQL",trial,"Platforms",true,""
"Virtual Machines",hold,"Platforms",true,"Prefer using lightweight Docker containers."
"Infrastructure as code",adopt,"Techniques",true,""
"Static code analysis",adopt,"Techniques",true,""
"Semantic Versioning",adopt,"Techniques",true,""
"Database Agnosticism",adopt,"Techniques",true,""
"Feature Flags",adopt,"Techniques",true,"Feature Flags are a great technique for minimizing long-lived feature branches. Our recommendation is to focus on simplicity - if you find yourself writing substantial code to support Feature Flags, consider using a third-party solution."
"Automated code style settings",adopt,"Techniques",true,"Codebases should be formatted consistently. Automated code-style settings achieve this without fuss."
"Continuous delivery",adopt,"Techniques",true,"Products should be ready for release at any time."
"Build inside Docker containers",trial,"Techniques",true,"TODO Clive"
"Continuous Deployment",assess,"Techniques",true,"We'd like to evaluate technology that increases our deployment frequency, with a view to getting value into the hands of our users as quickly as possible."