name,ring,quadrant,isNew,description
"Java",trial,"Languages and Frameworks",true,"Redgate purchased Flyway, written in <a href='https://www.oracle.com/java/'>Java</a>. Java is a plausible choice for new products (due to its rich ecosystem), but we default to C#."
"Bash",adopt,"Languages and Frameworks",true,"<a href='https://www.gnu.org/software/bash/'>Bash</a> is our default choice for scripting internal tools. Everyone should be familiar with the Bash toolkit."
"PowerShell",hold,"Languages and Frameworks",true,"Don't use PowerShell for new projects - prefer Bash."
"Python",adopt,"Languages and Frameworks",true,"Used primarily for writing ETL data pipelines"
"Scala",adopt,"Languages and Frameworks",true,"Used primarily on the hosted Apache Spark platform Databricks for batched ETL jobs."
"React",adopt,"Languages and Frameworks",true,"<a href='https://reactjs.org/'>React</a> makes it painless to create interactive UIs."
"VS Code",adopt,"Tools",true,"A free lightweight IDE. Our text editor of choice."
"Azure DevOps",trial,"Tools",true,"We believe Azure DevOps might be a fine alternative to TeamCity."
"Terraform",adopt,"Tools",true,"Used for automating infrastucture provisioning."
"Application Insights",adopt,"Tools",true,"All applications should use Application Insights as the default developer telemetry platform (incl. feature usage and error reporting)."
"Hashicorp Vault",adopt,"Tools",true,"We recommend <a href='https://www.vaultproject.io/'>Hashicorp Vault</a> for storing secrets."
"Docker",adopt,"Tools",true,"Docker should be used as the default containerisation technology. Used for building, testing and deployment."
"Makefiles",assess,"Tools",true,"Should we fall back to using Makefiles as part of a simpler build process? Again, this is part of our desire to simplify our build process."
"Apache Kafka",adopt,"Platforms",true,"<a href='https://kafka.apache.org/'>Kafka</a> Apache Kafka is an open-source distributed event streaming platform used by thousands of companies for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications."
"Kubernetes",adopt,"Platforms",true,"<a href='https://kubernetes.io/'>K8S</a> is the undeniable winner of orchestration tools."
"SQL Server as backing store",adopt,"Platforms",true,"When a product needs to store more complex data than it can fit in a flat file, we ask the customer for a SQL DB."
"PostgreSQL as backing store",trial,"Platforms",true,"If there's a very good reason to use a lightweight/free database engine, we should choose Postgres."
"Windows",adopt,"Platforms",true,"Windows must be one of our supported target platforms."
"Linux x64 (.NET supported versions)",adopt,"Platforms",true,"Linux must be one of our supported target platforms."
"macOS",adopt,"Platforms",true,"MacOS must be one of our supported target platforms."
"Virtual Machines",hold,"Platforms",true,"Prefer using lightweight Docker containers."
"CLIs",adopt,"Techniques",true,"Product should, where possible, expose funtionality via a CLI."
"RESTful APIs",adopt,"Techniques",true,"A REST architetural style is our default choice for building web APIs. Deviations can be made when it makes sense to do so."
"Containerised products",assess,"Techniques",true,"Where possible, all new products should be built to be containerised. We should ship the Mac/Linux versions of our products inside Docker containers."
"Infrastructure as code",adopt,"Techniques",true,"Infrastructure should be provisioned through code rather than manually (except for ad-hoc testing)"
"Automated code style settings",adopt,"Techniques",true,"Codebases should be formatted consistently. Automated code-style settings achieve this without fuss."
"Static code analysis (linters)",adopt,"Techniques",true,"Static code analysis is invaluable for automatically checking for problems in code. We use ESLint for JS and Roslyn-based analyzers for .NET. We also experimented with SonarQube but our implementation wasn't giving us confidence."
"Semantic Versioning",adopt,"Techniques",true,"We should use semver for all our versioning needs unless there's a compelling reason not to."
"Database Agnosticism",adopt,"Techniques",true,"We aim for feature parity between products that support different database engines."
"Feature Flags",adopt,"Techniques",true,"Feature Flags are a great technique for minimizing long-lived feature branches. Our recommendation is to focus on simplicity - if you find yourself writing substantial code to support Feature Flags, consider using a third-party solution."
"Continuous delivery",adopt,"Techniques",true,"Products should be ready for release at any time."
"Continuous Deployment",assess,"Techniques",true,"We'd like to evaluate technology that increases our deployment frequency, with a view to getting value into the hands of our users as quickly as possible."
"Build inside Docker containers",trial,"Techniques",true,"We should reduce build dependencies by building and testing our products inside containers."
"AI/ML",assess,"Techniques",true,"AI/ML are becoming commoditized. Off-the-shelf software is available for predictive modelling, text analysis, anomaly detection and much more."
"Automation/Low-code solutions",assess,"Techniques",true,"Remote is driving a digital transformation across industries. Low-code solutions, such as Power Apps, allow organizations to modernize these processes."
"Git Ops",trial,"Techniques",true,"The core idea of GitOps is having a Git repository that always contains declarative descriptions of the infrastructure currently desired in the production environment and an automated process to make the production environment match the described state in the repository. If you want to deploy a new application or update an existing one, you only need to update the repository - the automated process handles everything else. It’s like having cruise control for managing your applications in production. <a href='https://www.gitops.tech/'>Read more</a>"
"Data Mesh",assess,"Techniques",true,"Distributed Data Mesh is a relatively new data platform architecture concept. <a href='https://martinfowler.com/articles/data-monolith-to-mesh.html#DomainDataAsAProduct'>Read more</a>"
